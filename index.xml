<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chenxi Wu</title>
    <link>https://cassie1102.github.io/</link>
    <description>Recent content on Chenxi Wu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Nov 2020 03:05:08 +0800</lastBuildDate>
    
	<atom:link href="https://cassie1102.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Image Classification Using CNN</title>
      <link>https://cassie1102.github.io/post/cnn/</link>
      <pubDate>Tue, 17 Nov 2020 03:05:08 +0800</pubDate>
      
      <guid>https://cassie1102.github.io/post/cnn/</guid>
      <description>Neural network is an algorithmic mathematical model that imitates the behavioral characteristics of animal neural networks to perform distributed parallel information processing. This kind of network depends on the complexity of the system, and adjusts the interconnected relationship between a large number of internal nodes to achieve the purpose of processing information. The Neural network model was first established by Warren McCulloch and Walter Pitts in 1943. Their model is entirely based on mathematics and algorithms, which could not be tested due to lack of computing resources at that time.</description>
    </item>
    
    <item>
      <title>Doctoral_analysis</title>
      <link>https://cassie1102.github.io/post/doctoral_analysis/</link>
      <pubDate>Sat, 07 Nov 2020 01:53:53 +0800</pubDate>
      
      <guid>https://cassie1102.github.io/post/doctoral_analysis/</guid>
      <description>This blog uses the data of PhDs awarded in the US to build a Dash dashboard. According to the description, &amp;ldquo;These tables present detailed data on the demographic characteristics, educational history, sources of financial support, and postgraduation plans of doctorate recipients. Explore the Survey of Earned Doctorates data further via NCSES&amp;rsquo;s interactive data tool.&amp;rdquo;
The dashboard can be accessed here
I first generated the needed plots using plotly and saved them via chart-studio, the notebook can be found here.</description>
    </item>
    
    <item>
      <title>Starwar API Exploration</title>
      <link>https://cassie1102.github.io/post/starwar/</link>
      <pubDate>Fri, 23 Oct 2020 02:30:47 +0800</pubDate>
      
      <guid>https://cassie1102.github.io/post/starwar/</guid>
      <description>SWAPI, or the Star Wars API, is the world&amp;rsquo;s first quantified and programmatically-accessible data source for all the data from the Star Wars canon universe. This post will use SWAPI to request the results of interest from the website and find the oldest character in Star Wars with the films the character is in.
Request information The process requires the package requests. After exploring the request, I found that the result is stored in different pages which can be requested with the &amp;lsquo;next&amp;rsquo; feature in each page&amp;rsquo;s result.</description>
    </item>
    
    <item>
      <title>Spotify</title>
      <link>https://cassie1102.github.io/post/spotify/</link>
      <pubDate>Tue, 06 Oct 2020 18:08:52 +0800</pubDate>
      
      <guid>https://cassie1102.github.io/post/spotify/</guid>
      <description>Spotify is one of the most popular music streaming and media services provider. This post uses the Spotify songs dataset provided by tidytuesday and aims at building a 3NF normalized database using sqlite.
Let&amp;rsquo;s start by looking at the dataset. Below is the columns of the dataframe.
[&amp;lsquo;track_id&amp;rsquo;, &amp;lsquo;track_name&amp;rsquo;, &amp;lsquo;track_artist&amp;rsquo;, &amp;lsquo;track_popularity&amp;rsquo;, &amp;lsquo;track_album_id&amp;rsquo;, &amp;lsquo;track_album_name&amp;rsquo;, &amp;lsquo;track_album_release_date&amp;rsquo;, &amp;lsquo;playlist_name&amp;rsquo;, &amp;lsquo;playlist_id&amp;rsquo;, &amp;lsquo;playlist_genre&amp;rsquo;, &amp;lsquo;playlist_subgenre&amp;rsquo;, &amp;lsquo;danceability&amp;rsquo;, &amp;lsquo;energy&amp;rsquo;, &amp;lsquo;key&amp;rsquo;, &amp;lsquo;loudness&amp;rsquo;, &amp;lsquo;mode&amp;rsquo;, &amp;lsquo;speechiness&amp;rsquo;, &amp;lsquo;acousticness&amp;rsquo;, &amp;lsquo;instrumentalness&amp;rsquo;, &amp;lsquo;liveness&amp;rsquo;, &amp;lsquo;valence&amp;rsquo;, &amp;lsquo;tempo&amp;rsquo;, &amp;lsquo;duration_ms&amp;rsquo;]</description>
    </item>
    
    <item>
      <title>Malaria Visualizations</title>
      <link>https://cassie1102.github.io/post/malaria_visualisations/</link>
      <pubDate>Thu, 24 Sep 2020 11:55:10 +0800</pubDate>
      
      <guid>https://cassie1102.github.io/post/malaria_visualisations/</guid>
      <description>As one of the most severe diseases in current world, the World Health Organization (WHO) considers nearly half the worldâ€™s population is at risk from Malaria. Today I will create 3 visualizations for Malaria using the dataset provided by Tidytuesday.
The datasets I used to create the visualizations are as follows:
malaria_inc.csv - Malaria incidence by country for all ages across the world across time. malaria_deaths.csv - Malaria deaths by country for all ages across the world and time.</description>
    </item>
    
    <item>
      <title>Python Solution to 3 Euler projects</title>
      <link>https://cassie1102.github.io/post/euler_projects/</link>
      <pubDate>Thu, 10 Sep 2020 06:12:14 +0800</pubDate>
      
      <guid>https://cassie1102.github.io/post/euler_projects/</guid>
      <description>Euler Projects are a series of computational problems intended to be solved with computer programs. Today I will show the process of solving Problem 8, 41 and 82 using python.
Problem 82. Path sum: three ways The minimal path sum in the 5 by 5 matrix below, by starting in any cell in the left column and finishing in any cell in the right column, and only moving up, down, and right, is indicated in red and bold; the sum is equal to 994.</description>
    </item>
    
    <item>
      <title>How to Build a Personal Webpage</title>
      <link>https://cassie1102.github.io/post/github_page/</link>
      <pubDate>Thu, 27 Aug 2020 16:21:35 +0800</pubDate>
      
      <guid>https://cassie1102.github.io/post/github_page/</guid>
      <description>Hello, this post is an introduction on how to build a personal website using Github Pages and Hugo.
Hugo is one of the most popular framework for building websites. Github Pages is a static web hosting service provided by Github. Here I listed all the steps of building this website.
Step 1 - Install Hugo The Hugo website has detailed tutorial for installing Hugo. On Mac machines, you can simply install it using the following command:</description>
    </item>
    
  </channel>
</rss>